#include <iostream> 
using namespace std;

#define offset "\t\t\t\t\t\t"
//(define - определить)
//макроопределение (макрос)
//имя значение
#define что_заменить чем_заменить


//#define HOME_WORK

void main()
{
	setlocale(LC_ALL, "Russian");
#if defined HOME_WORK
	//#if defined HOME_WORK - если определено HOME_WORK,
	//то нижеследующий код будет виден компилятору
	cout << offset << "В лесу родилась елочка,\n";
	cout << offset << "В лесу она росла,\n";
	cout << offset << "Зимой и летом стройная,\n";
	cout << offset << "Зеленая была.\n"<< endl;

	cout << offset << "В лесу родилась елочка,\n";
	cout << offset << "В лесу она росла,\n";
	cout << offset << "Зимой и летом стройная,\n";
	cout << offset << "Зеленая была.\n"<< endl;

	cout << offset << "Метель ей пела песенку :\n";
	cout << offset << "\"Спи, елочка, бай - бай!\"\n";
	cout << offset << "Мороз снежком укутывал :\n";
	cout << offset << "\"Смотри, не замерзай!\"\n"<< endl;

	cout << offset << "Трусишка зайка серенький\n";
	cout << offset << "Под елочкой скакал.\n";
	cout << offset << "Порою волк, сердитый волк\n";
	cout << offset << "Рысцою пробегал.\n"<< endl;

	cout << offset << "Чу!Снег по лесу частому\n";
	cout << offset << "Под полозом скрипит,\n";
	cout << offset << "Лошадка мохноногая\n";
	cout << offset << "Торопится, бежит.\n"<< endl;

	cout << offset << "Везет лошадка дровенки,\n";
	cout << offset << "А в дровнях старичок,\n";
	cout << offset << "Срубил он нашу елочку\n";
	cout << offset << "Под самый корешок.\n"<< endl;

	cout << offset << "Теперь она, нарядная,\n";
	cout << offset << "Hа праздник к нам пришла\n";
	cout << offset << "И много, много радости\n";
	cout << offset << "Детишкам принесла!\n"<< endl;
#endif
}


/*
int slojenie(int a, int b) {
   a = a + b;
   return a;
}


int main(){
 setlocale(LC_ALL, "Russian");
	int s,v;
	cout << endl << "Введите число\n"<< endl;
	cin >> s;
	cout << endl << "Введите число\n"<< endl;
	cin >> v;
	int a = slojenie(s, v);
   cout << a, "\r\n\n";
   cout << endl << "\tabrakadabra!!! \r\n\t\"Hello World!!\" \r\n\n"<< endl;
   }
*/

/*
----------------------------
# - означает, что include это директива.
Директива - это указание компилятору на выполнение некоторых действий.
main() - это главная функция, которая является точкой входа программы,
поскольку с нее начинается выполнение любой программы.
void (пустота) означает, что функция main() ничего НЕ возвращает по завршении.
() - показываю что функция main() ничего не принимает, но их обязательно нужно ставить,
чтобы показать что main() - это функция.
{} - показывают тело и область видимости функции main()
cout (Console Out) - поток вывода на экран,
выводит значения в окно консоли, эти значения должны разделяться
при помощи <<
<< - это оператор перенаправления в поток, отправляет значения
в поток cout.
"Hello World!" - это строковая константа.
Строковая константа - это последовательность символов, заключенная в двойные кавычки.
; - признак конца выражения.
----------------------------
*/

/*
			Escape-последовательности:
Esc - это одиночные символы, экранированные символом \
/ - Slash (Косая черта)
\ - Backslash (Обратная косая черта) - это символ отмены специального значения другого символа.
\" - вывод двойных кавычек в консоль.
\\ - вывод символа \ в консоль.
\n (newline) - переводит курсор в начало новой строки.
\t (tab) - вывод в консоль символа табуляции.
*/